kind: pipeline
name: Build and Publish CMS
type: docker

steps:
  - name: Restore Cache
    image: drillster/drone-volume-cache
    pull: if-not-exists
    volumes:
      - name: cache
        path: /cache
    settings:
      restore: true
      mount:
        - ./node_modules
        - ./keystone/.keystone/admin/.next/cache
  - name: Build
    pull: if-not-exists
    image: node:lts-alpine
    depends_on:
      - "Restore Cache"
    environment:
      PRISMA_CLI_QUERY_ENGINE_TYPE: binary
      PRISMA_CLIENT_ENGINE_TYPE: binary
    commands:
      - apk add --no-cache libc6-compat
      - yarn install --frozen-lockfile
      - yarn build:keystone
  - name: Publish
    image: plugins/docker

    depends_on:
      - "Build"
    when:
      branch:
        - master
      event:
        exclude:
          - pull_request
    pull: if-not-exists
    settings:
      # cache_from: ghcr.io/sebasptsch/nextblog
      username:
        from_secret: github_username
      password:
        from_secret: github_token
      repo: ghcr.io/sebasptsch/nextcms
      registry: ghcr.io
      auto_tag: true
  - name: Rebuild Cache
    image: drillster/drone-volume-cache
    pull: if-not-exists
    depends_on:
      - "Build"
    volumes:
      - name: cache
        path: /cache
    settings:
      rebuild: true
      mount:
        - ./node_modules
        - ./keystone/.keystone/admin/.next/cache

volumes:
  - name: cache
    host:
      path: /tmp/cache
---
kind: pipeline
name: Build and Publish Frontend
type: docker

steps:
  - name: Restore Cache
    image: drillster/drone-volume-cache
    pull: if-not-exists
    volumes:
      - name: cache
        path: /cache
    settings:
      restore: true
      mount:
        - ./node_modules
        - ./frontend/.next/cache
  - name: Build
    pull: if-not-exists
    image: node:lts-alpine
    depends_on:
      - "Restore Cache"
    environment:
      PRISMA_CLI_QUERY_ENGINE_TYPE: binary
      PRISMA_CLIENT_ENGINE_TYPE: binary
    commands:
      - apk add --no-cache libc6-compat
      - yarn install --frozen-lockfile
      - yarn build:frontend
  - name: Publish
    image: plugins/docker

    depends_on:
      - "Build"
    when:
      branch:
        - master
      event:
        exclude:
          - pull_request
    pull: if-not-exists
    settings:
      # cache_from: ghcr.io/sebasptsch/nextblog
      username:
        from_secret: github_username
      password:
        from_secret: github_token
      repo: ghcr.io/sebasptsch/nextcms
      registry: ghcr.io
      auto_tag: true
  - name: Rebuild Cache
    image: drillster/drone-volume-cache
    pull: if-not-exists
    depends_on:
      - "Build"
    volumes:
      - name: cache
        path: /cache
    settings:
      rebuild: true
      mount:
        - ./node_modules
        - ./frontend/.next/cache

volumes:
  - name: cache
    host:
      path: /tmp/cache
# trigger:
#   event:
#     exclude:
#       - promote
# ---
# kind: pipeline
# type: docker
# name: Deploy
# steps:
#   - name: Deploy Using Ansible
#     image: plugins/ansible
#     pull: if-not-exists
#     environment:
#       SITE_URL:
#         from_secret: SITE_URL
#       GITHUB_CLIENT:
#         from_secret: GITHUB_CLIENT
#       GITHUB_SECRET:
#         from_secret: GITHUB_SECRET
#     settings:
#       playbook: .ansible/playbook.yml
#       ssh_extra_args:
#         - "-o StrictHostKeyChecking=no"
#       galaxy: .ansible/requirements.yml
#       inventory: .ansible/inventory
#       user: sebas
#       private_key:
#         from_secret: ansible_private_key
# trigger:
#   event:
#     - promote
#   target:
#     - production
