kind: pipeline
name: Build and Publish CMS
type: docker

steps:
  - name: Publish
    image: plugins/docker
    when:
      branch:
        - master
      event:
        exclude:
          - pull_request
    pull: if-not-exists
    settings:
      cache_from: ghcr.io/sebasptsch/nextcms
      target: production
      username:
        from_secret: github_username
      password:
        from_secret: github_token
      repo: ghcr.io/sebasptsch/nextcms
      tags:
        - latest
      registry: ghcr.io
      auto_tag: true
      dockerfile: keystone/Dockerfile
      build_args:
        - GRAPHQL_ENDPOINT=https://cms.sebasptsch.dev/api/graphql

---
kind: pipeline
name: Build and Publish Frontend
type: docker

steps:
  - name: Build and Publish
    image: plugins/docker
    when:
      branch:
        - master
      event:
        exclude:
          - pull_request
    pull: if-not-exists
    settings:
      cache_from: ghcr.io/sebasptsch/nextblog
      target: production
      username:
        from_secret: github_username
      password:
        from_secret: github_token
      repo: ghcr.io/sebasptsch/nextcms
      registry: ghcr.io
      auto_tag: true
      dockerfile: frontend/Dockerfile
      build_args:
        - GRAPHQL_ENDPOINT=https://cms.sebasptsch.dev/api/graphql
# trigger:
#   event:
#     exclude:
#       - promote
# ---
# kind: pipeline
# type: docker
# name: Deploy
# steps:
#   - name: Deploy Using Ansible
#     image: plugins/ansible
#     pull: if-not-exists
#     environment:
#       SITE_URL:
#         from_secret: SITE_URL
#       GITHUB_CLIENT:
#         from_secret: GITHUB_CLIENT
#       GITHUB_SECRET:
#         from_secret: GITHUB_SECRET
#     settings:
#       playbook: .ansible/playbook.yml
#       ssh_extra_args:
#         - "-o StrictHostKeyChecking=no"
#       galaxy: .ansible/requirements.yml
#       inventory: .ansible/inventory
#       user: sebas
#       private_key:
#         from_secret: ansible_private_key
# trigger:
#   event:
#     - promote
#   target:
#     - production
