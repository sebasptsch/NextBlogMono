kind: pipeline
name: Build and Publish CMS
type: docker

steps:
  - name: Publish
    image: plugins/docker
    when:
      branch:
        - master
      event:
        exclude:
          - pull_request
    pull: if-not-exists
    settings:
      purge: false
      # cache_from: ghcr.io/sebasptsch/nextcms
      target: production
      username:
        from_secret: github_username
      password:
        from_secret: github_token
      repo: ghcr.io/sebasptsch/nextcms
      tags:
        - latest
        - $DRONE_COMMIT
      registry: ghcr.io
      auto_tag: true
      dockerfile: keystone.Dockerfile

---
kind: pipeline
name: Build and Publish Frontend
type: docker

steps:
  - name: Build and Publish
    image: plugins/docker
    environment:
      GRAPHQL_ENDPOINT: https://cms.sebasptsch.dev/api/graphql
    when:
      branch:
        - master
      event:
        exclude:
          - pull_request
    pull: if-not-exists
    settings:
      purge: false
      # cache_from: ghcr.io/sebasptsch/nextblog
      target: production
      username:
        from_secret: github_username
      password:
        from_secret: github_token
      repo: ghcr.io/sebasptsch/nextcms
      registry: ghcr.io
      auto_tag: true
      tags:
        - latest
        - $DRONE_COMMIT
      dockerfile: frontend.Dockerfile
      build_args:
        - GRAPHQL_ENDPOINT=https://cms.sebasptsch.dev/api/graphql
# trigger:
#   event:
#     exclude:
#       - promote
---
kind: pipeline
type: docker
name: Deploy
steps:
  - name: Deploy Using Ansible
    image: plugins/ansible
    pull: if-not-exists
    environment:
      GRAPHQL_ENDPOINT: https://cms.sebasptsch.dev/api/graphql
      COMMIT: $DRONE_COMMIT
    settings:
      playbook: .ansible/cms-playbook.yml
      ssh_extra_args:
        - "-o StrictHostKeyChecking=no"
      galaxy: .ansible/requirements.yml
      inventory: .ansible/inventory
      user: sebas
      private_key:
        from_secret: ansible_private_key
trigger:
  event:
    - promote
  target:
    - production
